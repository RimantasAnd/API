1. Sukurti puslapį, kuriame bus atvaizduojami įrašai (posts). Kiekvienas įrašas turi:
1.1. Pavadinimą.
1.2. Pastraipą su įrašo (post) turiniu.
1.3. Autorių. Tai turi būti nuoroda. Kol kas ji gali niekur nevesti.
2. Po kiekvienu įrašu (post) gali būti komentarų (sukurti variantus įrašui, kuris neturi komentarų, kuris turi vieną komentarą ir kuris turi daugiau nei vieną komentarą). Kiekvienas komentaras turi:
2.1. Komentaro pavadinimą.
2.2. Komentaro turinį - pastraipą.
2.3. Komentarą parašiusio asmens el. pašto adresą.



Šiame puslapyje, kol kas, naudoti ranka įrašytus duomenis. Svarbiausias akcentas - stilius, kuris turi būti prisitaikantis prie ekrano dydžio. Inspiracijų galite semtis iš jums patinkančių puslapių.


3. Sukurti naują puslapį user.html, kuriame bus atvaizduojama vartotojo informacija:
3.1. Pilnas vardas.
3.2. Vartotojo vardas / nick'as.
3.3. El. paštas.
3.4. Adresas, kuris turės gatvę, namo numerį, miestą, pašto kodą. Paspaudus ant adreso, pagal koordinates, turėtų atidaryti šios vietos Google Maps. Kol kas naudoti bet kokią Google Map vietovę.
3.5. Telefono numeris.
3.6. Internetinio puslapio adresas.
3.7. Įmonės, kurioje dirba, pavadinimas.

4. Šiame puslapyje turės būti atvaizduojama:
4.1. Visi vartotojo parašyti įrašai (posts). Post'ų įrašuose nereikia atvaizduoti komentarų. Kiekvienas post'as turi turėti nuorodą.
4.2. Visi vartotojo sukurti foto albumai. Kiekvienas albumas turės:
4.2.1. Albumo pavadinimą, kuris turi būti nuoroda. Kol kas nuoroda gali niekur nevesti.
     itemBody.innerHTML = `<a href=user.html?id=${this.link}>${this.body}</a>`;


https://jsonplaceholder.typicode.com/users/1/posts


https://picsum.photos/id/1/200/300



5. Pagrindiniame puslapyje pridėti skiltį, kurioje atvaizduojamas albumų sąrašas. Kiekvienas albumas turės:
5.1. Pavadinimą, o paspaudus ant jo - nukreipiama į albumą.
5.2. Albumo autoriaus vardą.
5.3. Nuotrauką.
6. Sukurti naują puslapį album.html ir jame atvaizduoti:
6.1. Albumo pavadinimą.
6.2. Album autoriaus vardą. Paspaudus ant vardo - nukreipiama į autoriaus puslapį.
6.3. Skiltis, kurioje atvaizduojamos visos albumo nuotraukos. Panaudoti library (biblioteką), kuri skirta gražiam galerijos atvaizdavimui, pvz.:
6.3.1. https://photoswipe.com/
6.3.2. https://nanogallery2.nanostudio.org/
6.3.3. https://sachinchoolur.github.io/lightgallery.js/
6.3.4. Arba bet kurią kitą.


7. Sukurti naują puslapį post.html ir jame atvaizduoti:
7.1. Įrašo (post) pavadinimą.
7.2. Autoriaus vardą. Paspaudus ant autoriaus vardo, turėtų atidaryti autoriaus puslapį.
7.3. Įrašo turinį.
7.4. Įrašo komentarus. Komentarai turi būti atvaizduojami tokiu pačiu principu kaip ir pagrindiniame puslapyje.
7.5. Nuoroda „Kiti autoriaus įrašai", kurią paspaudus bus nukreipiama į naują puslapį. Jame bus atvaizduojami visi šio vartotojo įrašai.

Url Preview for PhotoSwipe: Responsive JavaScript Image Gallery
PhotoSwipe: Responsive JavaScript Image Gallery
Touch-friendly JavaScript image gallery for mobile and desktop, without dependencies. Responsive layout. Swipe and zoom gestures.

photoswipe.com



  <div class="card mb-3" style="max-width: 540px;">
  <div class="row g-0">
      <div class="col-md-4">
          <!-- <img src="..." class="img-fluid rounded-start" alt="..."> -->
      </div>
      <div class="col-md-8">
          <div class="card-body">
              <h5 class="card-title">Card title</h5>
              <p class="card-text">This is a wider card with supporting text below as a natural lead-in to
                  additional
                  content. This content is a little bit longer.</p>
              <p class="card-text"><small class="text-muted">Last updated 3 mins ago</small></p>
          </div>
      </div>
  </div>
</div>



 <!--  src="https://maps.google.com/maps?width=100%25&amp;height=200&amp;hl=en&amp;q=154%20Somerset%20Rd%20Bermuda+(James%20Bond)&amp;t=&amp;z=15&amp;ie=UTF8&amp;iwloc=B&amp;output=embed">
                    -->    

                    <div style="width: 100%">
                        <iframe   
        src="https://maps.google.com/maps?hl=en&amp;q=154%20Somerset%20Rd%20Bermuda+(James%20Bond)&amp;t=&amp;z=15&amp;
        ie=UTF8&amp;iwloc=B&amp;output=embed">
                        </iframe>
                    </div>



        <div class="card mb-3" style="max-width: 540px;">  
        </div>



 replace("","%20")   
 replace(/ /g, "%20")
 sParameter = encodeURIComponent(sParameter.trim())



<div class="accordion-item" id="accordion-item-1">
<h2 class="accordion-header" id="panelsStayOpen-heading-1">
<button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapse-1" aria-expanded="true" aria-controls="panelsStayOpen-collapse-1">
<span>Comment #1</span>  author : <strong> <a href="http://example-1.com">http://example-1.com</a></strong>
</button>
</h2>

<div class="accordion-collapse collapse show" id="panelsStayOpen-collapse-1" aria-labelledby="panelsStayOpen-1"><div class="accordion-body" id="accordion-body-item-1"><strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.<ul><li>
      <div class="card shadow p-3 mb-5 bg-body rounded" style="width: 18rem;">
      <div class="card-body">
      <h5 class="card-title">This is comment xxx</h5>
      <p class="card-text">this is Lorem-1 ipsum dolor sit amet consectetur adipisicing elit.
Dolore fuga saepe dolorum at blanditiis dolorem, qui sunt nostrum, tempore perferendis quia dignissimos.
Quam quidem ad assumenda placeat necessitatibus consectetur sequi!</p>
      <a href="nobody@dot.net" class="card-link">email</a>
      </div>
      </div></li><li>
      <div class="card shadow p-3 mb-5 bg-body rounded" style="width: 18rem;">
      <div class="card-body">
      <h5 class="card-title">This is comment yyy</h5>
      <p class="card-text">this is Lorem-2 ipsum dolor sit amet consectetur adipisicing elit.
Dolore fuga saepe dolorum at blanditiis dolorem, qui sunt nostrum, tempore perferendis quia dignissimos.
Quam quidem ad assumenda placeat necessitatibus consectetur sequi!</p>
      <a href="nobody@dot.net" class="card-link">email</a>
      </div>
      </div></li><li>
      <div class="card shadow p-3 mb-5 bg-body rounded" style="width: 18rem;">
      <div class="card-body">
      <h5 class="card-title">This is comment zzz</h5>
      <p class="card-text">this is Lorem-3 ipsum dolor sit amet consectetur adipisicing elit.
Dolore fuga saepe dolorum at blanditiis dolorem, qui sunt nostrum, tempore perferendis quia dignissimos.
Quam quidem ad assumenda placeat necessitatibus consectetur sequi!</p>
      <a href="nobody@dot.net" class="card-link">email</a>
      </div>
      </div></li></ul></div></div></div>







      let [res1, res2] = Promise.all([
  fetch('posts.json').then((res1) => res1.json()),
  fetch('comments.json').then((res2) => res2.json())

]).then([posts, comments] => {
  posts.forEach(post => {
    postsArr.push(post);
    comments.forEach(comment => {
      commentsArr.push(comment);
    });
    parsePosts()
  })
    .catch((error) => console.log("error", error));


console.log(res1);
console.log(res2);


.then(posts => {
    posts.forEach(post => {
      postsArr.push(post);
      return fetch('comments.json');
    })




fetch('posts.json')
  .then(response => response.json())
  .then(posts => {
    posts.forEach(post => {
      postsArr.push(post);
      return fetch('comments.json');
    })
      .then(response => response.json())
      .then(comments => {
        comments.forEach(comment => {
          commentsArr.push(comment);
        });
        console.log(commentsArr);
      })
    console.log(postsArr);
    console.log(commentsArr);
    parsePosts();
  })
  .catch(err => 


{
  console.error(err)
  // if there's an error, log it
  console.log(error);
}
);

postsArr = res[0];
commentsArr = res[1];

bodyText = new accordeonItem(postsArr[i].id, `http://example-${i}.com`, postsArr[i].pText, commsSubArr, postsArr[i].title, postsArr[i].nick);




https://jsonplaceholder.typicode.com/

https://jsonplaceholder.typicode.com/posts?_limit=10&_start=20
https://jsonplaceholder.typicode.com/users?id=1

const postsWrapper = document.querySelector('.posts');
fetch('https://jsonplaceholder.typicode.com/posts?_limit=10&_start=20') 
  .then(response => response.json())
  .then(posts => {
    posts.map(post => {
      console.log(post);
      const postElement = document.createElement('a');
      postElement.textContent = post.title;
      postElement.setAttribute('href', 'post.html?post_id=' + post.id)
      postsWrapper.append(postElement);
    })
  })

const queryString = window.location.search;
const urlParams = new URLSearchParams(queryString);
const postId = urlParams.get('post_id');
console.log(queryString);
fetch('https://jsonplaceholder.typicode.com/posts/' + postId)
  .then(res => res.json())
  .then(post => {
    console.log(post);
  })




<!-- <h6 class="card-subtitle mb-2 text-muted">username</h6>
                        <h5 class="card-title">name</h5>
                            <div class="main_data">
                                <h6 class="card-subtitle mb-2 text-muted">My address</h6>
                                <ul>
                                    <li class="list-group-item">street :<span></span></li>
                                    <li class="list-group-item">suite :<span></span></li>
                                    <li class="list-group-item">city:<span></span></li>
                                    <li class="list-group-item">zipcode:<span></span></li>
                                </ul>
                                <h6 class="card-subtitle mb-2 text-muted">My company</h6>
                                <ul>
                                    <li class="list-group-item">name :<span></span></li>
                                    <li class="list-group-item">catchPhrase :<span></span></li>
                                    <li class="list-group-item">bs:<span></span></li>
                                </ul>
                            </div>
                        <p class="card-text"><small class="text-muted">call me : <a href="phone:email" class="card-link">Don't hesitate call me</a></small></p>
                        <a href="web" class="card-link">Plese visit my site</a>
                        <a href="email:email" class="card-link">Don't hesitate write me</a> -->














              fetch('https://jsonplaceholder.typicode.com/posts?_limit=10')
  .then(response => response.json())
  .then(posts => {
    const postsWrapper = document.createElement('div');
    postsWrapper.classList.add('posts-wrapper');
    document.querySelector('body').prepend(postsWrapper);
    posts.map(post => {
      fetch('https://jsonplaceholder.typicode.com/users/' + post.userId)
        .then(res => res.json())
        .then(userData => {
          const postElement = document.createElement('div');
          postElement.classList.add('post');
          const showCommentsButton = document.createElement('button');
          showCommentsButton.classList.add('comments-button');
          showCommentsButton.textContent = 'Read Comments';
          showCommentsButton.addEventListener('click', () => {
            fetch(`https://jsonplaceholder.typicode.com/posts/${post.id}/comments`)
              .then(res => res.json())
              .then(comments => {
                const commentsList = document.createElement('div');
                commentsList.classList.add('comments-list');
                comments.map(comment => {
                  console.log(comment);
                  const commentElement = document.createElement('div');
                  commentElement.classList.add('comment-wrapper');
                  commentElement.innerHTML = `<h3>${comment.name}</h3>
                                              <span>Message by: ${comment.email}</span>
                                              <p>${comment.body}</p>`;
                  commentsList.append(commentElement);
                })
                postElement.append(commentsList);
                showCommentsButton.remove();
              })
          })
          postElement.innerHTML = `<h2><a href="post.html?post_id=${post.id}">${post.title}</a></h2>
                                   <span>Author: <a href="user.html?user_id=${post.userId}">${userData.name}</a></span>
                                   <p>${post.body}</p>`;
          postElement.append(showCommentsButton);
          postsWrapper.append(postElement);
        })
    })
  })


  <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Post</title>
</head>
<body>
  <div class="post-wrapper">
    <h1 class="post-title"></h1>
    <span class="post-author"></span>
    <p class="post-content"></p>
  </div>
  <script src="post.js"></script>
</body>
</html>




-----------------------------------
[19:31] Romanas Venckus

[19:31] Romanas Venckus
const postTitle = document.querySelector('.post-title');
const postAuthor = document.querySelector('.post-author');
const postContent = document.querySelector('.post-content');
const queryParams = window.location.search;
const urlParams = new URLSearchParams(queryParams);
const postId = urlParams.get('post_id');
fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`)
  .then(res => res.json())
  .then(post => {
    fetch(`https://jsonplaceholder.typicode.com/users/${post.userId}`)
      .then(res => res.json())
      .then(user => {
        postAuthor.innerHTML = `Author: <a href="user.html?user_id=${user.id}">${user.name}</a>`;
      })
    postTitle.textContent = post.title;
    postContent.textContent = post.body;
  })


   <iframe class="map"
src="https://maps.google.com/maps?width=100%25&amp;height=200&amp;hl=en&amp;q=32.28304104740741,%20-64.87336179846439+(James%20Bond)&amp;t=&amp;z=14&amp;ie=UTF8&amp;iwloc=B&amp;output=embed">
  </iframe>


<iframe class="map" 
scr="https://maps.google.com/maps?width=100%25&amp;amp;height=200&amp;amp;hl=en&amp;amp;q=-37.3159,%2081.1496+(Leanne%20Graham)&amp;amp;t=&amp;amp;z=14&amp;amp;ie=UTF8&amp;amp;iwloc=B&amp;amp;output=embed">
</iframe>


  
<iframe class="map" 
scr="https://maps.google.com/maps?width=100%25&amp;height=200&amp;hl=en&amp;q=-37.3159,%2081.1496+(Leanne%20Graham)&amp;t=&amp;z=14&amp;ie=UTF8&amp;iwloc=B&amp;output=embed"></iframe>






<li class="list-group-item d-flex justify-content-between align-items-start">
	<div class="ms-2 me-auto">
		<div class="fw-bold">
			${album.title}
		</div>
     		${album.id} By ${author.name}
	</div>
	<span class="badge bg-primary rounded-pill">${photos.length}</span>
</li>

<li class="list-group-item d-flex justify-content-between align-items-start">
	<div class="ms-2 me-auto">
		<div class="fw-bold">
			odit laboriosam sint quia cupiditate animi quis
		</div>
	</div>
	<span class="badge bg-primary rounded-pill">50</span>
</li>



              <div class="carousel-item active">
                 <img src="https://picsum.photos/200/300.jpg?random=1" class="d-block w-100" alt="...">
                <div class="carousel-caption d-none d-md-block">
                  <h5>"title": "dolores voluptatem ipsam suscipit"</h5>
                  <p>"albumId": 71,</p>
                </div>
              </div>
              <div class="carousel-item">
                <img src="https://picsum.photos/200/300.jpg?random=2" class="d-block w-100" alt="...">
                <div class="carousel-caption d-none d-md-block">
                  <h5>Second slide label</h5>
                  <p>Some representative placeholder content for the second slide.</p>
                </div>
              </div>
              <div class="carousel-item">
                <img src="https://picsum.photos/200/300.jpg?random=3" class="d-block w-100" alt="...">
                <div class="carousel-caption d-none d-md-block">
                  <h5>Third slide label</h5>
                  <p>Some representative placeholder content for the third slide.</p>
                </div>
              </div>



let previousBtn=document.querySelectorAll(".previous");
console.log(previousBtn);
// previousBtn.classList.add('disabled');

let  nextBtn=document.querySelectorAll(".next");
console.log(nextBtn);
nextBtn.classList.remove('disabled');
nextBtn.setAttribute(`href`,`?page=2`);




